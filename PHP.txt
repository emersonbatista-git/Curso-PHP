*********VARIAVEIS*****

* O PHP define automatico o tipo de variavel, nao sendo necessario informar se é uma variavel, mas podemos definir se for o caso.
- Real      1,5  2,9  3,9
- Inteira   1    2    3
- Caracter  ABCDE





$ - COMANDO PARA RECEBER A VARIAVEL
echo - COMANDO PARA PRINTAR NA TELA
<br> - Mesma fnução do HTML, quebra a linha para baixo, utiliza junto com echo, caso queira printar na tela mais de uma linha
=    - Comando para receber a variavel 
GET  - significa "pegar" exemplo:
                                 $n1 = $_GET["a"]; ("a" nao é variavel é o parametro a ser informado. 

<?php
$idade = 48;  (Idade recebe 48)
$nome = "Emerson";

echo "$nome tem $idade anos! ";

?>


******OPERADORES ARITIMETICOS********

Adição                           +
Subtração                        -
Multiplicação                    * 
Divisao                          /
Modulo (resto da divisão)        %



$n1 = 2;
$n2 = 3;
$s = $n1 + $n2;

echo " A soma vale $s";

Exemplo do codigo:
   <div>
        <?php
        $n1 = 2;
        $n2 = 3;
        $s = $n1 + $n2;
        echo " A soma vale $s";
        /*Pode representar assim tambem:
        echo "A soma entre $n1 e $n2 é igual a $s";*/
        
        ?>
    </div>

Outro exemplo:
<div>
        <?php
        $n1 = 2;
        $n2 = 3;
        
        echo " A soma vale ". ($n1+$n2);
        echo "<br>A subtração vale ". ($n1-$n2);
        echo "<br>A multiplicação vale ". ($n1*$n2);
        echo "<br>A divisão vale ". ($n1/$n2);
        echo "<br>O modulo vale ". ($n1%$n2);

        
          
        ?>
    </div>

*Podemos informqar estes valores direto no navegador, por enquanto, ate criar formularios:
localhost/aula05/operadores.php?a=5&b=8

        $n1 = $_GET["a"];
        $n2 = $_GET["b"];
        $m = ($n1 + $n2) /2;


******FUNCÕES ARITIMETICAS*******

abs ()    - Valor absoluto
pow ()    - potenciacao
sqrt ()   - Raiz quadrada
round ()  - Arredondamento, no caso do round segue a regra da matematica, tem dois comandos para definir manualmente, ceil - Para cima, floor - Para baixo
intval () - Pega a parte inteira do numero
number_format () - Formatação


******OPERADORES DE ATRIBUIÇÃO******

a <- 1                   $a = 1;
b <- 3                   $b = 3;
c <- a + b               $c = $a + $b;
c <- c + 5               $c += 5;
b <- b + a               $b += $a;
a <- a + 1               $a++;  

Quando houver a mesma variavel dos dois lados, podemos simplificvar da seguinte forma: 


Adição                           $a = $a + $b      $a += $b
Subtração                        $a = $a - $b      $a -= $b                     
Multiplicação                    $a = $a * $b      $a *= $b                  
Divisao                          $a = $a / $b      $a /= $b                       
Modulo (resto da divisão)        $a = $a % $b      $a %= $b      
Concatenação                     $a = $a . $b      $a .= $b

Utilizando o pre, ele primeiro mostra o atual e depois exibe o resultado , no Pos ele mostra o resultado e nao o atual

Pré-incremento   $a = $a + 1   ++$a  
Pós-incremento   $a = $a + 1   $a++ 
Pré-decremento   $a = $a - 1   --$a 
Pós-decremento   $a = $a - 1   $a-- 



*******COMENTARIO*******

Comentario em linha

//
#

Comentario em bloco

/* */



******REFERENCIAS ENTRE VARIAVEIS*******

$a = 3;                $a = 3;
$b = $a;               $b = &$a;
$b += 5;               $b += 5;
echo $a;               echo $a;
echo $b;               echo $b;

$a  $b                 $a  $b  Neste caso o sinal de & fez b ser uma referencia de a, com isso b ficou  com o mesmo valor de a, 3
 3   8                  8   8


******VARIAVEIS DE VARIAVEIS********

Quase nao é utilizado

$site = "cursoemvideo";                 $$site = "cursoPHP";  

$site                                   $cursoemvideo
cursoemvideo                             cursoPHP

Neste caso criou a primeira variavel $site e depois criou a segunda como variavel cursoemvideo, como se voce uma secundaria 


*******OPERADORES RELACIONAIS*********

Maior                       $a > $b
Menor                       $a < $b                     
Maior ou igual              $a >= $b
Menor ou igual              $a <= $b
Diferente                   $a <> $b  ou $a != $b
Igual                       $a == $b
Identico                    $a === $b - Se o conteudo é igual, incluindo a caracterisca, por exemplo se é string
Operador ternario ?   :;      Seria expressao?verdadeiro:falso
                            Exemplo:
                             $maior = $a > $b ? verdadeiro:falso - seria a condição senao
                       
$maior = $a>$b ? $a : $b;   Neste caso se a for maior que b, entao $maior recebe $a, senao $maior recebe $b

$sit = $m <7 ? "recuperação" : "aprovado"   Neste caso de $m for menor que 7, $sit recebe recuperacao, senao $sit recebe aprovado 



******Operadores logicos********

and ou &&       V V = V, V F = F, F V = F, F F = F     As duas tem que atender os requisitos

or ou ||        V V = V, V F = V, F V = V, F F = F     Uma ou a outra tem que atender os requisitos

xor             V V = V, V F = V, F V = V, F F = F     Ou exclusivo, ele pode ser uma coisa ou a outra, mas nunca as duas, neste caso se for as duas iguais sempre será                                                        Falso, mesmo que seja as duas verdadeiro.
!               V é falso e F é verdaderiro            Neste caso seria o perador NAO, uma coisa que é nao verdsadeiro é falso, e o que é nao falso é verdadeiro.    


********OPERADORES CONDICIONAIS**********

SENAO - Ternario

Neste exemplo se $tipo for maior ou igual a 18, mostre obrigatorio senao moste nao obigatorio, os operadores sao os simbolos ? e :

$tipo = ($idade >= 18 && $idade<65) ? "OBRIGATORIO":"NAO OBRIGATORIO";


Outra opção de senão e mais utilizado seria:

if - se
else - senao


Exemplos:

Neste exemplo pode utilizar desta forma ou com o Ternario $maior = $a>$b ? $a:$b

if($a>$b)
{$maior = $a;}

else
{$maior = $b;}

Neste nao teria como aplicar o ternario. Ternario só aceita uma variavel:

if($idade>=18) {
$vota = true;
$direge = true;
}

else {
 $vota = false;
 $dirige = false;
}

Podemos ter estrutura composta e simplificar, neste exemplo temos um if dentro de um else, ficar atento aos {}:

    
        if ($idade<16) {
            $vota = 'não pode votar';
        }

    else {

        if (($idade >= 16 && $idade < 18) || ($idade > 65 )) {
            $vota = 'tem o voto opcional';
    }
        else {
         $vota = 'voto obrigatorio';
        
        }
    
    }

Tem a opção de simplicar com o comando elseif, eliminaria um {}:

        if ($idade<16) {
            $vota = 'não pode votar';
        }

    elseif (($idade >= 16 && $idade < 18) || ($idade > 65 )) {
            $vota = 'tem o voto opcional';
             }
        else {
         $vota = 'voto obrigatorio';
        
        }

Obs.: N alinha do elseif ou do if tem uma consição envolvendo 3 situações, a || que dizer ou, entao temos duas consiçoes antes e uma depois.


 
******OPCAO ESCOLHA*******

Escolha (op)                                     PHP
                                             switch ($op) {
caso 1                                         case 1:
 Escreva ("A")                                  echo "A";
Caso 2                                            break;
 Escreva ("B")                                 case 2:
Caso 3                                          echo "B";
 Escreva ("Erro")                                 break;
                                               default:
FimEscolha                                      echo "Erro";   
                                              }

O break sempre será informado exceto na ultima opção, ele faz que ao ser selecionado já saia do laço.



******OPÇÃO ENQUANTO*******
Verifica no inicio o teste logico

c <- 1                                     $c = 1;
                                           while ($c <= 10) {
enquanto (c<=10) faca                          echo $c;             
  Escreva (c)                              $c++; (pode ser escrito tamnbem $c = $c + 1; ou $c += 1;                    
 c <- c + 1                                }                    
Fimenquanto     


*******OPÇÃO REPITA********
Verifica no final o teste logico

c <- 1                                    $c = 1;

Repita                                    do {
  Escreva (c)                             echo $c;
 c <- c + 1                               $c++;  
                                          }
Ate (c > 10)                              while ($c <= 10);   


*******ROTINAS EM ALGORITIMOS*******

*Procedimento

Procedimento Somas (A, B: inteiro)                      function soma ($a, $b) {            
var s: inteiro                                            $s = $a + $b;
S <- A + B                                                echo $s;
Escreva (S)                                             }
Fimprocedimento   

Chamar a função: Soma (3,4)                              soma (3,4);                                     

Procedimento nao retorna valor


* Função

funcao Soma (a, b: inteiro)                             function soma ($a, $b) {      
var s: inteiro                                            $s = $a + $b;
 S <- a + b                                               return $s;
 Retorne (S)                                                }
fimfuncao

Res <- soma(3,4)                                           $res = soma(3,4);      

* Rotina com varios valores

$res = soma(3,4,8,1,2);                                  function soma() {             
                                                           $p = func_get_args();  **Esta função irá pegar todos os valores na ordem em um vetor(p0,p1,etc...)  
                                                           $tot = func_num_args(); ** Irá retornar o numero de argumentos que foram passado, no exemplo serão 5
                                                           $s =0;
                                                           for ($i=0; $i < $tot; $i++) {  
                                                             $s = $s + $p[$i];
                                                           }
                                                             return $s;
                                                         }

*Função Parte II

-Passagem por valor

Procedimento Teste (x: inteiro)                           function teste ($x) {
   x <- x + 2                                                $x = $x + 2;  ou $x +=2
   Escreva(x)                                                 echo $x;
Fimprocedimento                                             }


a <- 3                                                        $a = 3;
Teste (a)                                                     teste ($a);
Escreva(a) (Mostraria 3 e nao 5)                               echo $a; (Mostraria 3 e nao 5) 

Obs: Passagem por valor, se eu alterar o valor no procedimento (x), o valor da variavel na funcao nao altera (a), por nao retornar o valor.


- Passagem por referencia

Procedimento Teste (var x: inteiro)                           function teste (&$x) {
   x <- x + 2                                                $x = $x + 2;  ou $x +=2
   Escreva(x)                                                 echo $x;
Fimprocedimento                                             }


a <- 3                                                        $a = 3;
Teste (a)                                                     teste ($a);

Escreva(a) /*Mostraria 5)*/                               echo $a; /*Mostraria 5*/  


****Rotinas externas*******

* Duas funcoes include e require. A diferença é que o include caso nao localize o arquivo ele continua executando o programa, o require para o programa.

<?php
        include "02-funcoes.php";
          echo "<h1>Testando novas funções</h1>";
          ola();
          mostraValor(4);

          echo "<h2>Finalizando Programa...</h2>";

 
        ?>

Tem variações como include-once e require-once.
A diferença é que nesta opção, se já estiver carregado a função, nao irá carregar novamente, nao deixa repetir a função no mesmo local.

******Manipular String*******

O PHP considera string tudo que está entre aspas.
Existem diversas funções para facilitar, iremos ver 25 por enquanto.


1 - printf

Imprimir já formatado, um dos exemplo eu nao preicisaria de formatar o numero no codigo, formato na impressão.

%s - Mostrar uma string
%f - float, numero real
%d - Valor decimal (positivo ou negativo)
%u - Valor decimal sem sinal (apenas positivo)

printf("O %s R$ %.2f", $p, $pr);


2 - print_r

Mostra detalhes de uma variavel, principalmente se for um vetor

$v2 = array (3,7,6,2,1,9);
        print_r($v2)

Podemos substituir o print_r por duas funções, var_dump($v2); e var_export($v2);

3 - Função wordwrap

Cria quebra de linhas dentro do codigo.
Neste exemplo o 20 é o numero de caracter que irá quebrar no codigo, colocando o "<br/>" irá quebrar tambem visualmente e com "<br/>\n" irá quebrar em ambos.
Inserindo false no final, irá quebrar de acordo com os caracteres mesmo que quebre a palavra, se colocar true irá quebrar com os caracteres mas nao permitirar quebra palavras ao meio, ficando maior as linhas se necessario.

$t = "Aqui temos um texto gigante criado pelo PHP e vai ostrar o funcionamento da função wordwrap";
$r = wordwrap($t, 20, "<br/>\n", false);
echo $r;

4 - Função strlen

Mostra a quantidade de caracter do string

$txt = "Curso em Video";
$tamanho = strlen($txt);
echo $tamanho;

5 - Função trim

Elimina os espaçoes antes e depois do texto, preservando os espaçoes do meio.

$txt = "   Curso em Video   ";
$tamanho = strlen($txt);
$novo = trim($txt);
echo $novo;
echo (strlen($novo));

6 - Função ltrim

Elimina os espaços apenas do inicio

$txt = "   Curso em Video   ";
$tamanho = strlen($txt);
$novo = ltrim($txt);
echo $novo;
echo (strlen($novo));

7 - Função rtrim

Elimina os espaços apenas do final

$txt = "   Curso em Video   ";
$tamanho = strlen($txt);
$novo = rtrim($txt);
echo $novo;
echo (strlen($novo));


8 - Função str_word_count

Mostra a quantidade de palavras que contem na string, tem 3 opçoes de exibição:

echo "Com opção 0<br/>";
$frase = "Eu vou estudar PHP";
$cont = str_word_count($frase, 0);
echo $cont;

echo "Com opção 1<br/>";
$frase1 = "Eu vou estudar PHP";
$cont = str_word_count($frase1, 1);
print_r($cont);

echo "Com opção 2<br/>";
$frase2 = "Eu vou estudar PHP";
$cont = str_word_count($frase2, 2);
print_r($cont);

9 - Função explore

Basicamente mostra o vetor, pode definir o limitador,  por exemplo, com isso ao localizar espaço ele coloca cada palavra em um vetor

$site = "Curso em video";
$vetor = explode(" ",$site);
print_r($vetor);

10 - Função str_split

neste caso ele irá pegar cada letra e colocar em um vetor

<?php
$nome = "Emerson";
$vetor = str_split($nome);
print_r($vetor);

11 - Função implode

Neste caso irá juntar os vetores, pode utilizar tambem o join. Neste caso para exibir utilizar o print, agora nao é mais um vetor

$vetor[0] = "Curso";
$vetor[1] = "em";
$vetor[2] = "Video";

$texto = implode(" ", $vetor);
print($texto);


12 - Função chr
Exibe o codigo em que a letra está
$letra = chr(67);
echo"A letra de codigo 67 é $letra";

13 - Função ord
Exibe o codigo referente a letra

$letra = "C";
$cod = ord($letra);
print"A letra $letra tem o codigo $cod";

14 - Funcao strtolower
Escreve tudo em minusculo

<?php
       $nome = "Emerson Santos";
       print("Seu nome é" . strtolower($nome));


15 - Função strtoupper 

Escreve tudo em maiusculo


       $nome = "Emerson Santos";
       print("Seu nome é" . strtoupper($nome));

16 - Função ucfirst

Coloca a primeira letra em maiuscula, se houver outras em maiuscula irá manter

$nome = "emerson santos";
       print("Seu nome é" . ucfirst($nome));

17 - Função ucwords

Coloca a primeira letra de cada palavra em maiuscula

$nome = "emerson santos";
       print("Seu nome é" . ucwords($nome));

18 - Função strrev

Escreve ao contrario

$nome = "emerson santos";
       print("Seu nome é" . strrev($nome));

19 - Função strpos

Mostra a posição que a palavra definida começa, tem que respeitar as letras maiusculas e minusculas

$frase = "Estou aprendendo PHP";
$pos = strpos($frase, "PHP");
echo"$frase";
echo "<br/>A string foi encontrada na posicao $pos" ;

20 - Função stripos
Ignora a questao de maiusculas e minusculas

$frase = "Estou aprendendo PHP";
$pos = strpos($frase, "php");
echo"$frase";
echo "<br/>A string foi encontrada na posicao $pos" ;

21 - Função substr_count
Mostra quantas vezes a palavra definida apareceu dentro da frase.

$frase = "Estou aprendendo PHP no curso em video de PHP";
$cont = substr_count($frase, "PHP");
print("PHP encontrado $cont vezes");

22 - Função substr
Mostra a string comoçando na letra 0 e terminando na letra 5, no exemplo abaixo, neste caso irá mostrar apenas a palavra Curso 


$site = "Curso em Video";
$sub = substr($site, 0,5);

echo "$sub ";

Se eu colocar apenas um valor, irá pegar daquele valor em diante

$site = "Curso em Video";
$sub = substr($site, 7);

echo "$sub ";


Se colocar valor negativo, irá pegar as ultimas letras, neste exemplo seria video

$site = "Curso em Video";
$sub = substr($site, -5);

echo "$sub ";

Se eu colocar dois numeros sendo um negativo irá considerar apenas as duas primeiras letras da ultima palavra, neste exemplo seria Vi

$site = "Curso em Video";
$sub = substr($site, -5, 2);

echo "$sub ";

23 - Função str_pad

Informa quantos caracteres será utilizado, se informar 30 e a palavra tiver 11, ira completar com espaços ou caracter, no exemplo abaixo será a direita

$nome = "Gustavo";
$novo = str_pad($nome, 30, "#", STR_PAD_RIGHT);
print ("Meu professor é $novo Guanabara");

podemos utilizar tambem STR_PAD_BOTH para deixar a palavra no centro e para deixar a esquerda STR_PAD_LEFT

24 - Função str_repeat

Repete a string quantas vezes voce informar

$txt = str_repeat("PHP",5);
print("O texto gerado foi $txt");

25 - Função str_replace

Pode substituir uma palavra, no exemplo abaixo a palvra original é Matematica, foi substituida por PHP, irá trocar quantas houver na frase.

$frase = "Gosto de estudar Matematica!!!";
$novafrase = str_replace("Matematica", "PHP", $frase);

print("$novafrase");

Utilizando o i no comando ele ignora maiusculs e minusculas
$novafrase = str_ireplace("Matematica", "PHP", $frase);


***********VETOR **********

var                                                                        $n[0] = 3;                                        
n: vetor[0..3] de inteiro                                                  $n[1] = 5;
                                                                           $n[2] = 8;
inicio                                                                     $n[3] = 2;

n[0] <- 3                                                                ou de forma simplificada                                 
n[1] <- 5                                                                $n = array(3,5,8,2);
n[2] <- 8                                                                 $n[] = 7;               Neste caso inseri uma nova variavel depois
n[3] <- 2                                                                 unset($v[2]);         neste caso estou removendo o vetor 2
                                                                       
                                                                        foreach($n as $valor){       /*função para imprimir vetor*/
                                                                            echo "$valor ";
                                                                        }    


- Podemos utilizar o RANGE tambem para criar vetor , de uma forma um pouco diferente

$c = range(5,20,2);     Um range de 5 ate 20 e pulando de 2 em 2


- Chaves personalizadas, neste caso estamos referenciando o valor para cada posição

$v = array (1=> "a", 3=> "b", 6=> "c", 8=>"d"); 


*******MATRIZ********

- No PHP nao exite matriz mas sim vetores dentro de vetores

$m= array(array(2,3),
                array(3,4),
                array(9,5)); 

- Podemos alterar os valores 
$m[0] [1] = $m [2] [0];


*******FUNÇOES DOS VETORES******

print_r   - Server para mostrar como está preenchido o vetor, matriz ou coleção de dados, mostra de forma simples, é voltado para o programador, utilize a tag                      <pre></pre> melhora  a visualização

var_dump - Exibe o vetort mais completo, como quantos tem e tipo de variavel.

count    - faz a contagem dos elementos

$v[] = "A"; - Neste comando insere mais um valor no vetor ao final, informe o nome do vetor e colchetes vazio

array_push($n,7);  - Neste comando tambem insere mais um valor no final do vetor

array_pop($n);     - Neste comando exclui o ultimo valor do vetor

array_unshift($n,7); - Insere valor no inicio do vetor

array_shift($n);     - Elimina o valor do inicio do vetor

sort($n);            - Colocar o vetor em ordem; 3, 5, 8, 2 -> 2, 3, 5, 8

rsort($n);           - Coloca o vetor em ordem reversa 3, 5, 8, 2 -> 8, 5, 3, 2

asort($n)            - Ordena de forma associativa, irá ordenar os valores irá manter seus indices, com isso os valores estaram em ordem mas os indices nao.
                       Array ( [0] => 3 [1] => 5 [2] => 8 [3] => 2 [4] => 6 [5] => 20 ) Array ( [3] => 2 [0] => 3 [1] => 5 [4] => 6 [2] => 8 [5] => 20 )

arsort($n)           - Mesmo conceito, porem em ordem reversa

ksort($n)            - Neste caso, coloca os indices em ordem com seu respectivos valores.
                      Array ( [2] => 3 [1] => 5 [0] => 8 [3] => 2 [4] => 6 ) Array ( [0] => 8 [1] => 5 [2] => 3 [3] => 2 [4] => 6 )

krsort($n)           - Ordena em forma decrescente os indices





















                                                  
















































 











      

                



























                                             
                                                              
                                                              
                                                        
                                                         
                                                                 



